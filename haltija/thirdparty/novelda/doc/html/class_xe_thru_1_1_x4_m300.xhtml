<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ModuleConnector: XeThru::X4M300 Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">ModuleConnector
          &#160;<span id="projectnumber">1.1.5</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Project brief</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_xe_thru.xhtml">XeThru</a></li><li class="navelem"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml">X4M300</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_xe_thru_1_1_x4_m300-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">XeThru::X4M300 Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>TODO.  
 <a href="class_xe_thru_1_1_x4_m300.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_x4_m300_8hpp_source.xhtml">X4M300.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:adff040a6a76fd6a2e8cf7b9261fa51fe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#adff040a6a76fd6a2e8cf7b9261fa51fe">X4M300</a> (RadarInterface &amp;radar_interface)</td></tr>
<tr class="memdesc:adff040a6a76fd6a2e8cf7b9261fa51fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#adff040a6a76fd6a2e8cf7b9261fa51fe">More...</a><br /></td></tr>
<tr class="separator:adff040a6a76fd6a2e8cf7b9261fa51fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec679d496f341bafdb5458fde8902e2e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#aec679d496f341bafdb5458fde8902e2e">~X4M300</a> ()</td></tr>
<tr class="memdesc:aec679d496f341bafdb5458fde8902e2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#aec679d496f341bafdb5458fde8902e2e">More...</a><br /></td></tr>
<tr class="separator:aec679d496f341bafdb5458fde8902e2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87ad0d3a96aa7c2bfb3e30c9b40de3bb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a87ad0d3a96aa7c2bfb3e30c9b40de3bb">set_debug_level</a> (unsigned char level)</td></tr>
<tr class="memdesc:a87ad0d3a96aa7c2bfb3e30c9b40de3bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets debug level in the Xethru module.  <a href="#a87ad0d3a96aa7c2bfb3e30c9b40de3bb">More...</a><br /></td></tr>
<tr class="separator:a87ad0d3a96aa7c2bfb3e30c9b40de3bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac344832954bf56cbc5420ba08fb0514f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#ac344832954bf56cbc5420ba08fb0514f">ping</a> (uint32_t *pong_value)</td></tr>
<tr class="memdesc:ac344832954bf56cbc5420ba08fb0514f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make sure there is a connection to FW on the Xethru <a class="el" href="class_xe_thru_1_1_x4_m300.xhtml" title="TODO. ">X4M300</a> module.  <a href="#ac344832954bf56cbc5420ba08fb0514f">More...</a><br /></td></tr>
<tr class="separator:ac344832954bf56cbc5420ba08fb0514f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d48a8a575e606e1396973cdba3aa006"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a9d48a8a575e606e1396973cdba3aa006">get_system_info</a> (const uint8_t info_code, std::string *system_info)</td></tr>
<tr class="memdesc:a9d48a8a575e606e1396973cdba3aa006"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string containing system information given by infocode:<br />
 XTID_SSIC_ITEMNUMBER = 0x00 -&gt; Returns the product Item Number, including revision. This is programmed in Flash during manufacturing<br />
 XTID_SSIC_ORDERCODE = 0x01 -&gt; Returns the product order code<br />
 XTID_SSIC_FIRMWAREID = 0x02 -&gt; Returns the installed Firmware ID. As viewed from the "highest" level of the software, "X4M300"<br />
 XTID_SSIC_VERSION = 0x03 -&gt; Returns the installed Firmware Version. As viewed from the "highest" level of the software<br />
 XTID_SSIC_BUILD = 0x04 -&gt; Returns information of the SW Build installed on the device<br />
 XTID_SSIC_SERIALNUMBER = 0x06 -&gt; Returns the product serial number<br />
 XTID_SSIC_VERSIONLIST = 0x07 -&gt;Returns ID and version of all components. Calls all components and compound a string E.g. "X4M300:1.0.0.3;XEP:2.3.4.5;X4C51:1.0.0.0;DSP:1.1.1.1".  <a href="#a9d48a8a575e606e1396973cdba3aa006">More...</a><br /></td></tr>
<tr class="separator:a9d48a8a575e606e1396973cdba3aa006"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6020a93451876f33aa81fe6a38f1d078"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a6020a93451876f33aa81fe6a38f1d078">reset</a> ()</td></tr>
<tr class="memdesc:a6020a93451876f33aa81fe6a38f1d078"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets and restart the module.  <a href="#a6020a93451876f33aa81fe6a38f1d078">More...</a><br /></td></tr>
<tr class="separator:a6020a93451876f33aa81fe6a38f1d078"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fe225acfe8173ac55393401dfccfe2e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a9fe225acfe8173ac55393401dfccfe2e">module_reset</a> ()</td></tr>
<tr class="memdesc:a9fe225acfe8173ac55393401dfccfe2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets the module.  <a href="#a9fe225acfe8173ac55393401dfccfe2e">More...</a><br /></td></tr>
<tr class="separator:a9fe225acfe8173ac55393401dfccfe2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af92d0ed6b1e9227a30091554859dd8fa"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#af92d0ed6b1e9227a30091554859dd8fa">start_bootloader</a> ()</td></tr>
<tr class="memdesc:af92d0ed6b1e9227a30091554859dd8fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enters the bootloader for FW upgrades.  <a href="#af92d0ed6b1e9227a30091554859dd8fa">More...</a><br /></td></tr>
<tr class="separator:af92d0ed6b1e9227a30091554859dd8fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a467f849f6541ec51720e35e944d255ae"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a467f849f6541ec51720e35e944d255ae">system_run_test</a> (const uint8_t testcode, Bytes *data)</td></tr>
<tr class="memdesc:a467f849f6541ec51720e35e944d255ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runs the different manufacturing tests identified by testcode.  <a href="#a467f849f6541ec51720e35e944d255ae">More...</a><br /></td></tr>
<tr class="separator:a467f849f6541ec51720e35e944d255ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aace86c93e998280f19ae64cbd05801d5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#aace86c93e998280f19ae64cbd05801d5">load_profile</a> (const uint32_t profileid)</td></tr>
<tr class="memdesc:aace86c93e998280f19ae64cbd05801d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads the profile given by profileid.  <a href="#aace86c93e998280f19ae64cbd05801d5">More...</a><br /></td></tr>
<tr class="separator:aace86c93e998280f19ae64cbd05801d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a566ab01887a1144ffc88b47d344bbbf5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a566ab01887a1144ffc88b47d344bbbf5">set_sensor_mode</a> (const uint8_t mode, const uint8_t param)</td></tr>
<tr class="memdesc:a566ab01887a1144ffc88b47d344bbbf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Control the execution mode of the sensor.  <a href="#a566ab01887a1144ffc88b47d344bbbf5">More...</a><br /></td></tr>
<tr class="separator:a566ab01887a1144ffc88b47d344bbbf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ab6f73f1e935aee36eda94c46972d37"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a2ab6f73f1e935aee36eda94c46972d37">set_sensitivity</a> (const uint32_t sensitivity)</td></tr>
<tr class="memdesc:a2ab6f73f1e935aee36eda94c46972d37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the overall sensitivity.  <a href="#a2ab6f73f1e935aee36eda94c46972d37">More...</a><br /></td></tr>
<tr class="separator:a2ab6f73f1e935aee36eda94c46972d37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a018a43834fb990f9a6205c69ee095555"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a018a43834fb990f9a6205c69ee095555">set_detection_zone</a> (const float start, const float end)</td></tr>
<tr class="memdesc:a018a43834fb990f9a6205c69ee095555"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current detection zone.  <a href="#a018a43834fb990f9a6205c69ee095555">More...</a><br /></td></tr>
<tr class="separator:a018a43834fb990f9a6205c69ee095555"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08372898089ecd75af3ee98e9fdc6f55"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a08372898089ecd75af3ee98e9fdc6f55">get_detection_zone</a> (float *start, float *end)</td></tr>
<tr class="memdesc:a08372898089ecd75af3ee98e9fdc6f55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the actual detection zone.  <a href="#a08372898089ecd75af3ee98e9fdc6f55">More...</a><br /></td></tr>
<tr class="separator:a08372898089ecd75af3ee98e9fdc6f55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e97f57cf02e81c406942aedc033e634"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a1e97f57cf02e81c406942aedc033e634">get_detection_zone_limits</a> (float *min, float *max, float *step)</td></tr>
<tr class="memdesc:a1e97f57cf02e81c406942aedc033e634"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the potential settings of detection zone from the module.  <a href="#a1e97f57cf02e81c406942aedc033e634">More...</a><br /></td></tr>
<tr class="separator:a1e97f57cf02e81c406942aedc033e634"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51ce5eb83d2f4d758a52ed3deae80e4c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a51ce5eb83d2f4d758a52ed3deae80e4c">set_led_control</a> (const uint8_t mode, uint8_t intensity)</td></tr>
<tr class="memdesc:a51ce5eb83d2f4d758a52ed3deae80e4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">This command configures the LED mode.  <a href="#a51ce5eb83d2f4d758a52ed3deae80e4c">More...</a><br /></td></tr>
<tr class="separator:a51ce5eb83d2f4d758a52ed3deae80e4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62e832113822e712facfb6a9bd9c9482"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a62e832113822e712facfb6a9bd9c9482">set_output_control</a> (const uint32_t output_feature, const uint32_t output_control)</td></tr>
<tr class="memdesc:a62e832113822e712facfb6a9bd9c9482"><td class="mdescLeft">&#160;</td><td class="mdescRight">Control module profile output.  <a href="#a62e832113822e712facfb6a9bd9c9482">More...</a><br /></td></tr>
<tr class="separator:a62e832113822e712facfb6a9bd9c9482"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a260f7f37b04d3687cd42a3670fa4206b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a260f7f37b04d3687cd42a3670fa4206b">peek_message_presence_single</a> ()</td></tr>
<tr class="memdesc:a260f7f37b04d3687cd42a3670fa4206b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return number of <a class="el" href="class_xe_thru_1_1_presence_single_data.xhtml" title="Encapsulates and aggregates true presenece data coming from the Xethru X4M300 module. ">PresenceSingleData</a> messages available in queue.  <a href="#a260f7f37b04d3687cd42a3670fa4206b">More...</a><br /></td></tr>
<tr class="separator:a260f7f37b04d3687cd42a3670fa4206b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab58ed9fdfae12dbd3080432a5355809a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#ab58ed9fdfae12dbd3080432a5355809a">read_message_presence_single</a> (<a class="el" href="class_xe_thru_1_1_presence_single_data.xhtml">PresenceSingleData</a> *presence_single)</td></tr>
<tr class="memdesc:ab58ed9fdfae12dbd3080432a5355809a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a single <a class="el" href="class_xe_thru_1_1_presence_single_data.xhtml" title="Encapsulates and aggregates true presenece data coming from the Xethru X4M300 module. ">PresenceSingleData</a> item from the queue.  <a href="#ab58ed9fdfae12dbd3080432a5355809a">More...</a><br /></td></tr>
<tr class="separator:ab58ed9fdfae12dbd3080432a5355809a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bd2bcdb413ed51ce524e829fb0f7397"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a1bd2bcdb413ed51ce524e829fb0f7397">peek_message_presence_movinglist</a> ()</td></tr>
<tr class="memdesc:a1bd2bcdb413ed51ce524e829fb0f7397"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return number of <a class="el" href="class_xe_thru_1_1_presence_moving_list_data.xhtml" title="Encapsulates and aggregates presence data coming from the Xethru X4M300 module. ">PresenceMovingListData</a> messages available in queue.  <a href="#a1bd2bcdb413ed51ce524e829fb0f7397">More...</a><br /></td></tr>
<tr class="separator:a1bd2bcdb413ed51ce524e829fb0f7397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23c9680bf5db65a33e91c20cc57ec84c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a23c9680bf5db65a33e91c20cc57ec84c">read_message_presence_movinglist</a> (<a class="el" href="class_xe_thru_1_1_presence_moving_list_data.xhtml">PresenceMovingListData</a> *presence_moving_list)</td></tr>
<tr class="memdesc:a23c9680bf5db65a33e91c20cc57ec84c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a single <a class="el" href="class_xe_thru_1_1_presence_moving_list_data.xhtml" title="Encapsulates and aggregates presence data coming from the Xethru X4M300 module. ">PresenceMovingListData</a> item from the queue.  <a href="#a23c9680bf5db65a33e91c20cc57ec84c">More...</a><br /></td></tr>
<tr class="separator:a23c9680bf5db65a33e91c20cc57ec84c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13235d55707df469bd248e7814b8f591"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a13235d55707df469bd248e7814b8f591">peek_message_baseband_ap</a> ()</td></tr>
<tr class="memdesc:a13235d55707df469bd248e7814b8f591"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return number of <a class="el" href="class_xe_thru_1_1_baseband_ap_data.xhtml" title="Represents amplitude phase baseband data coming from the module. ">BasebandApData</a> messages available in queue.  <a href="#a13235d55707df469bd248e7814b8f591">More...</a><br /></td></tr>
<tr class="separator:a13235d55707df469bd248e7814b8f591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a732ada00cbc25f10cdfad82d55bba31e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a732ada00cbc25f10cdfad82d55bba31e">read_message_baseband_ap</a> (<a class="el" href="class_xe_thru_1_1_baseband_ap_data.xhtml">BasebandApData</a> *baseband_ap)</td></tr>
<tr class="memdesc:a732ada00cbc25f10cdfad82d55bba31e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a single <a class="el" href="class_xe_thru_1_1_baseband_ap_data.xhtml" title="Represents amplitude phase baseband data coming from the module. ">BasebandApData</a> item from the queue.  <a href="#a732ada00cbc25f10cdfad82d55bba31e">More...</a><br /></td></tr>
<tr class="separator:a732ada00cbc25f10cdfad82d55bba31e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad735a6031441fa4080a39b5240924893"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#ad735a6031441fa4080a39b5240924893">peek_message_baseband_iq</a> ()</td></tr>
<tr class="memdesc:ad735a6031441fa4080a39b5240924893"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return number of <a class="el" href="class_xe_thru_1_1_baseband_iq_data.xhtml" title="Represents I/Q baseband data coming from the module. ">BasebandIqData</a> messages available in queue.  <a href="#ad735a6031441fa4080a39b5240924893">More...</a><br /></td></tr>
<tr class="separator:ad735a6031441fa4080a39b5240924893"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b250d4efc01aef19656a0917c92a036"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a1b250d4efc01aef19656a0917c92a036">read_message_baseband_iq</a> (<a class="el" href="class_xe_thru_1_1_baseband_iq_data.xhtml">BasebandIqData</a> *baseband_iq)</td></tr>
<tr class="memdesc:a1b250d4efc01aef19656a0917c92a036"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a single <a class="el" href="class_xe_thru_1_1_baseband_iq_data.xhtml" title="Represents I/Q baseband data coming from the module. ">BasebandIqData</a> item from the queue.  <a href="#a1b250d4efc01aef19656a0917c92a036">More...</a><br /></td></tr>
<tr class="separator:a1b250d4efc01aef19656a0917c92a036"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>TODO. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="adff040a6a76fd6a2e8cf7b9261fa51fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adff040a6a76fd6a2e8cf7b9261fa51fe">&sect;&nbsp;</a></span>X4M300()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::X4M300::X4M300 </td>
          <td>(</td>
          <td class="paramtype">RadarInterface &amp;&#160;</td>
          <td class="paramname"><em>radar_interface</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">internale</td><td>object used to interface the radar </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aec679d496f341bafdb5458fde8902e2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec679d496f341bafdb5458fde8902e2e">&sect;&nbsp;</a></span>~X4M300()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::X4M300::~X4M300 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a08372898089ecd75af3ee98e9fdc6f55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08372898089ecd75af3ee98e9fdc6f55">&sect;&nbsp;</a></span>get_detection_zone()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::get_detection_zone </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the actual detection zone. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">start</td><td>start of detection zone in meters </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">end</td><td>end of detection zone in meters </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a1e97f57cf02e81c406942aedc033e634"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e97f57cf02e81c406942aedc033e634">&sect;&nbsp;</a></span>get_detection_zone_limits()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::get_detection_zone_limits </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>step</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the potential settings of detection zone from the module. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">min</td><td>smallest value for detection zone start </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">max</td><td>largest value for detection zone end </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">step</td><td>detection zone start and end step size </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a9d48a8a575e606e1396973cdba3aa006"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d48a8a575e606e1396973cdba3aa006">&sect;&nbsp;</a></span>get_system_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::get_system_info </td>
          <td>(</td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>info_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string *&#160;</td>
          <td class="paramname"><em>system_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a string containing system information given by infocode:<br />
 XTID_SSIC_ITEMNUMBER = 0x00 -&gt; Returns the product Item Number, including revision. This is programmed in Flash during manufacturing<br />
 XTID_SSIC_ORDERCODE = 0x01 -&gt; Returns the product order code<br />
 XTID_SSIC_FIRMWAREID = 0x02 -&gt; Returns the installed Firmware ID. As viewed from the "highest" level of the software, "X4M300"<br />
 XTID_SSIC_VERSION = 0x03 -&gt; Returns the installed Firmware Version. As viewed from the "highest" level of the software<br />
 XTID_SSIC_BUILD = 0x04 -&gt; Returns information of the SW Build installed on the device<br />
 XTID_SSIC_SERIALNUMBER = 0x06 -&gt; Returns the product serial number<br />
 XTID_SSIC_VERSIONLIST = 0x07 -&gt;Returns ID and version of all components. Calls all components and compound a string E.g. "X4M300:1.0.0.3;XEP:2.3.4.5;X4C51:1.0.0.0;DSP:1.1.1.1". </p>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="aace86c93e998280f19ae64cbd05801d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aace86c93e998280f19ae64cbd05801d5">&sect;&nbsp;</a></span>load_profile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::load_profile </td>
          <td>(</td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>profileid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Loads the profile given by profileid. </p>
<p>If another profile is already loaded, the other profile is unloaded before the new profile is loaded. The profile does not start, the module remains idle. <br />
 profileid = 0x014d4ab8 : presence profile</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">profileid</td><td>the id of the profile to load </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a9fe225acfe8173ac55393401dfccfe2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fe225acfe8173ac55393401dfccfe2e">&sect;&nbsp;</a></span>module_reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::module_reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets the module. </p>
<p>The client must perform a close and then an open on the <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> to reeastablish connection.</p>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a13235d55707df469bd248e7814b8f591"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13235d55707df469bd248e7814b8f591">&sect;&nbsp;</a></span>peek_message_baseband_ap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::peek_message_baseband_ap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return number of <a class="el" href="class_xe_thru_1_1_baseband_ap_data.xhtml" title="Represents amplitude phase baseband data coming from the module. ">BasebandApData</a> messages available in queue. </p>
<dl class="section return"><dt>Returns</dt><dd>size: number og messages in buffer </dd></dl>

</div>
</div>
<a id="ad735a6031441fa4080a39b5240924893"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad735a6031441fa4080a39b5240924893">&sect;&nbsp;</a></span>peek_message_baseband_iq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::peek_message_baseband_iq </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return number of <a class="el" href="class_xe_thru_1_1_baseband_iq_data.xhtml" title="Represents I/Q baseband data coming from the module. ">BasebandIqData</a> messages available in queue. </p>
<dl class="section return"><dt>Returns</dt><dd>size: number og messages in buffer </dd></dl>

</div>
</div>
<a id="a1bd2bcdb413ed51ce524e829fb0f7397"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bd2bcdb413ed51ce524e829fb0f7397">&sect;&nbsp;</a></span>peek_message_presence_movinglist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::peek_message_presence_movinglist </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return number of <a class="el" href="class_xe_thru_1_1_presence_moving_list_data.xhtml" title="Encapsulates and aggregates presence data coming from the Xethru X4M300 module. ">PresenceMovingListData</a> messages available in queue. </p>
<dl class="section return"><dt>Returns</dt><dd>size: number of messages in buffer </dd></dl>

</div>
</div>
<a id="a260f7f37b04d3687cd42a3670fa4206b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a260f7f37b04d3687cd42a3670fa4206b">&sect;&nbsp;</a></span>peek_message_presence_single()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::peek_message_presence_single </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return number of <a class="el" href="class_xe_thru_1_1_presence_single_data.xhtml" title="Encapsulates and aggregates true presenece data coming from the Xethru X4M300 module. ">PresenceSingleData</a> messages available in queue. </p>
<dl class="section return"><dt>Returns</dt><dd>: size: number of messages in queue </dd></dl>

</div>
</div>
<a id="ac344832954bf56cbc5420ba08fb0514f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac344832954bf56cbc5420ba08fb0514f">&sect;&nbsp;</a></span>ping()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::ping </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pong_value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Make sure there is a connection to FW on the Xethru <a class="el" href="class_xe_thru_1_1_x4_m300.xhtml" title="TODO. ">X4M300</a> module. </p>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a732ada00cbc25f10cdfad82d55bba31e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a732ada00cbc25f10cdfad82d55bba31e">&sect;&nbsp;</a></span>read_message_baseband_ap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::read_message_baseband_ap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_baseband_ap_data.xhtml">BasebandApData</a> *&#160;</td>
          <td class="paramname"><em>baseband_ap</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a single <a class="el" href="class_xe_thru_1_1_baseband_ap_data.xhtml" title="Represents amplitude phase baseband data coming from the module. ">BasebandApData</a> item from the queue. </p>
<p>Blocks if queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">baseband_ap</td><td>pointer to returned <a class="el" href="class_xe_thru_1_1_baseband_ap_data.xhtml" title="Represents amplitude phase baseband data coming from the module. ">BasebandApData</a> item </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a1b250d4efc01aef19656a0917c92a036"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b250d4efc01aef19656a0917c92a036">&sect;&nbsp;</a></span>read_message_baseband_iq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::read_message_baseband_iq </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_baseband_iq_data.xhtml">BasebandIqData</a> *&#160;</td>
          <td class="paramname"><em>baseband_iq</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a single <a class="el" href="class_xe_thru_1_1_baseband_iq_data.xhtml" title="Represents I/Q baseband data coming from the module. ">BasebandIqData</a> item from the queue. </p>
<p>Blocks if queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">baseband_iq</td><td>pointer to returned <a class="el" href="class_xe_thru_1_1_baseband_iq_data.xhtml" title="Represents I/Q baseband data coming from the module. ">BasebandIqData</a> item </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a23c9680bf5db65a33e91c20cc57ec84c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23c9680bf5db65a33e91c20cc57ec84c">&sect;&nbsp;</a></span>read_message_presence_movinglist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::read_message_presence_movinglist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_presence_moving_list_data.xhtml">PresenceMovingListData</a> *&#160;</td>
          <td class="paramname"><em>presence_moving_list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a single <a class="el" href="class_xe_thru_1_1_presence_moving_list_data.xhtml" title="Encapsulates and aggregates presence data coming from the Xethru X4M300 module. ">PresenceMovingListData</a> item from the queue. </p>
<p>Blocks if queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">presence_moving_list</td><td>pointer to returned <a class="el" href="class_xe_thru_1_1_presence_moving_list_data.xhtml" title="Encapsulates and aggregates presence data coming from the Xethru X4M300 module. ">PresenceMovingListData</a> item</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="ab58ed9fdfae12dbd3080432a5355809a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab58ed9fdfae12dbd3080432a5355809a">&sect;&nbsp;</a></span>read_message_presence_single()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::read_message_presence_single </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_presence_single_data.xhtml">PresenceSingleData</a> *&#160;</td>
          <td class="paramname"><em>presence_single</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a single <a class="el" href="class_xe_thru_1_1_presence_single_data.xhtml" title="Encapsulates and aggregates true presenece data coming from the Xethru X4M300 module. ">PresenceSingleData</a> item from the queue. </p>
<p>Blocks if queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">presence_single</td><td>pointer to returned <a class="el" href="class_xe_thru_1_1_presence_single_data.xhtml" title="Encapsulates and aggregates true presenece data coming from the Xethru X4M300 module. ">PresenceSingleData</a> item </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a6020a93451876f33aa81fe6a38f1d078"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6020a93451876f33aa81fe6a38f1d078">&sect;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets and restart the module. </p>
<p>This is a convenience method that calls <a class="el" href="class_xe_thru_1_1_x4_m300.xhtml#a9fe225acfe8173ac55393401dfccfe2e" title="Resets the module. ">module_reset()</a>, disconnects the communication port, and then reestablishes connection with the module.</p>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a87ad0d3a96aa7c2bfb3e30c9b40de3bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87ad0d3a96aa7c2bfb3e30c9b40de3bb">&sect;&nbsp;</a></span>set_debug_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::set_debug_level </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets debug level in the Xethru module. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">level</td><td>New debug level. Valid range [0-9]. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a018a43834fb990f9a6205c69ee095555"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a018a43834fb990f9a6205c69ee095555">&sect;&nbsp;</a></span>set_detection_zone()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::set_detection_zone </td>
          <td>(</td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the current detection zone. </p>
<p>Rules: See <a class="el" href="class_xe_thru_1_1_x4_m300.xhtml" title="TODO. ">X4M300</a> datasheet. The actual detection zone is determined by profile configuration. Use the get_detection_zone command to get the actual values</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">start</td><td>start of detection zone in meters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">end</td><td>end of detection zone in meters </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a51ce5eb83d2f4d758a52ed3deae80e4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51ce5eb83d2f4d758a52ed3deae80e4c">&sect;&nbsp;</a></span>set_led_control()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::set_led_control </td>
          <td>(</td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>intensity</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This command configures the LED mode. </p>
<p><br />
</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>mode = 0 : OFF mode = 1 : simple mode = 2 : full (default) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">intensity</td><td>0 to 100, 0=low, 100=high, not implemented yet </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a62e832113822e712facfb6a9bd9c9482"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62e832113822e712facfb6a9bd9c9482">&sect;&nbsp;</a></span>set_output_control()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::set_output_control </td>
          <td>(</td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>output_feature</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>output_control</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Control module profile output. </p>
<p>Enable and disable data messages. Several calls can be made, one for each available output message the profile provides. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">output_feature</td><td>see values in xtid.h.<br />
 Possible features are:<br />
 PresenceSingle<br />
 PresenceMovingList<br />
 BasebandIQ<br />
 BasebandAP<br />
 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output_control</td><td>see values in xtid.h<br />
 Typical values: 0 = disable<br />
 1 = enable<br />
</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a2ab6f73f1e935aee36eda94c46972d37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ab6f73f1e935aee36eda94c46972d37">&sect;&nbsp;</a></span>set_sensitivity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::set_sensitivity </td>
          <td>(</td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>sensitivity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the overall sensitivity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sensitivity</td><td>: 0 to 9, 0 = low, 9 = high </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a566ab01887a1144ffc88b47d344bbbf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a566ab01887a1144ffc88b47d344bbbf5">&sect;&nbsp;</a></span>set_sensor_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::set_sensor_mode </td>
          <td>(</td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Control the execution mode of the sensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>see xtid.h for profileid values.<br />
 Run - Start profile execution<br />
 Idle - Halts profile execution. Can be resumed by setting mode to Run.<br />
 Stop - Stops profile execution. Must do load_profile to continue.<br />
 Manual - Routes X4 radar data directly to host rather than to profile execution. Can then interact directly with <a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> / X4Driver. Will disrupt profile performance.<br />
 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param</td><td>Not used, ignored, can be 0. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="af92d0ed6b1e9227a30091554859dd8fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af92d0ed6b1e9227a30091554859dd8fa">&sect;&nbsp;</a></span>start_bootloader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::start_bootloader </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enters the bootloader for FW upgrades. </p>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a467f849f6541ec51720e35e944d255ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a467f849f6541ec51720e35e944d255ae">&sect;&nbsp;</a></span>system_run_test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::X4M300::system_run_test </td>
          <td>(</td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>testcode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Bytes *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Runs the different manufacturing tests identified by testcode. </p>
<p>Can return any number of results depending on test_mode. Host must know how to parse test results.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">testcode</td><td></td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">data</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/<a class="el" href="_x4_m300_8hpp_source.xhtml">X4M300.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
