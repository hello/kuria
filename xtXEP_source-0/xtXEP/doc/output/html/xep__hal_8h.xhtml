<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: include/xep_hal.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">0.9.2-rc1</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">xep_hal.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Brief description.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;stdint.h&gt;</code><br />
<code>#include &lt;stdbool.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for xep_hal.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h__incl.svg" width="187" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h__dep__incl.svg" width="2924" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="xep__hal_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structxt__test__result__t.xhtml">xt_test_result_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct with results specific for a test.  <a href="structxt__test__result__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structxtio__spi__handle__t.xhtml">xtio_spi_handle_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct with information/data about a SPI interface.  <a href="structxtio__spi__handle__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structxtio__spi__callbacks__t.xhtml">xtio_spi_callbacks_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct with pointers to SPI interface callback functions.  <a href="structxtio__spi__callbacks__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:abaf0e993cd739df6f7c90cf5f6a1a593"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#abaf0e993cd739df6f7c90cf5f6a1a593">XT_SELFTEST_DATA_LENGTH</a>&#160;&#160;&#160;256</td></tr>
<tr class="separator:abaf0e993cd739df6f7c90cf5f6a1a593"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3d52480192cb2985bd524ee3e1b4c8d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ab3d52480192cb2985bd524ee3e1b4c8d">XTIO_GPIO_MODE</a>&#160;&#160;&#160;0x0001</td></tr>
<tr class="memdesc:ab3d52480192cb2985bd524ee3e1b4c8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normal GPIO mode - this is default mode.  <a href="#ab3d52480192cb2985bd524ee3e1b4c8d">More...</a><br /></td></tr>
<tr class="separator:ab3d52480192cb2985bd524ee3e1b4c8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0aca13b2e9f6051822058e890a02650"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#af0aca13b2e9f6051822058e890a02650">XTIO_PULL_UP</a>&#160;&#160;&#160;0x0010</td></tr>
<tr class="memdesc:af0aca13b2e9f6051822058e890a02650"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pull up enabled.  <a href="#af0aca13b2e9f6051822058e890a02650">More...</a><br /></td></tr>
<tr class="separator:af0aca13b2e9f6051822058e890a02650"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0402ba24c9ec87157bfd25fc9c033e3e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a0402ba24c9ec87157bfd25fc9c033e3e">XTIO_PULL_DOWN</a>&#160;&#160;&#160;0x0020</td></tr>
<tr class="memdesc:a0402ba24c9ec87157bfd25fc9c033e3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pull down enabled.  <a href="#a0402ba24c9ec87157bfd25fc9c033e3e">More...</a><br /></td></tr>
<tr class="separator:a0402ba24c9ec87157bfd25fc9c033e3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adff4345ea8836266d999a952cd7b200b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#adff4345ea8836266d999a952cd7b200b">XTIO_FLOATING</a>&#160;&#160;&#160;0x0030</td></tr>
<tr class="memdesc:adff4345ea8836266d999a952cd7b200b"><td class="mdescLeft">&#160;</td><td class="mdescRight">No pull ups enabled.  <a href="#adff4345ea8836266d999a952cd7b200b">More...</a><br /></td></tr>
<tr class="separator:adff4345ea8836266d999a952cd7b200b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9793193337497d6f1a56c5cdb708300"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aa9793193337497d6f1a56c5cdb708300">XTIO_INTERRUPT_MODE</a>&#160;&#160;&#160;0x0002</td></tr>
<tr class="memdesc:aa9793193337497d6f1a56c5cdb708300"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable interrupt for IO pin.  <a href="#aa9793193337497d6f1a56c5cdb708300">More...</a><br /></td></tr>
<tr class="separator:aa9793193337497d6f1a56c5cdb708300"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a3c505a1c06065976774a1f8e0c34c0a3"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a></td></tr>
<tr class="separator:a3c505a1c06065976774a1f8e0c34c0a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4611b605e45ab401f02cab15c5e38715"><td class="memItemLeft" align="right" valign="top">typedef float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a></td></tr>
<tr class="memdesc:a4611b605e45ab401f02cab15c5e38715"><td class="mdescLeft">&#160;</td><td class="mdescRight">32-bit floating-point type definition.  <a href="#a4611b605e45ab401f02cab15c5e38715">More...</a><br /></td></tr>
<tr class="separator:a4611b605e45ab401f02cab15c5e38715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9739683364e9e73b35913009d80d6d3"><td class="memItemLeft" align="right" valign="top">typedef int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ac9739683364e9e73b35913009d80d6d3">xtio_set_spi_mode_t</a>) (void *spi_handle, <a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52">xtio_spi_mode_t</a> xtio_spi_mode)</td></tr>
<tr class="memdesc:ac9739683364e9e73b35913009d80d6d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Typedef of callback function for setting SPI mode.  <a href="#ac9739683364e9e73b35913009d80d6d3">More...</a><br /></td></tr>
<tr class="separator:ac9739683364e9e73b35913009d80d6d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd8e61df225a326c619c2e28b16a64c9"><td class="memItemLeft" align="right" valign="top">typedef int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#abd8e61df225a326c619c2e28b16a64c9">xtio_get_spi_mode_t</a>) (void *spi_handle, <a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52">xtio_spi_mode_t</a> *xtio_spi_mode)</td></tr>
<tr class="memdesc:abd8e61df225a326c619c2e28b16a64c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Typedef of callback function for getting SPI mode.  <a href="#abd8e61df225a326c619c2e28b16a64c9">More...</a><br /></td></tr>
<tr class="separator:abd8e61df225a326c619c2e28b16a64c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcbf87c5cd2944802444e9815295aa7c"><td class="memItemLeft" align="right" valign="top">typedef int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#afcbf87c5cd2944802444e9815295aa7c">xtio_spi_write_t</a>) (void *spi_handle, uint8_t *write_buffer, uint32_t number_of_bytes_to_write)</td></tr>
<tr class="memdesc:afcbf87c5cd2944802444e9815295aa7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Typedef of callback function for writing through SPI.  <a href="#afcbf87c5cd2944802444e9815295aa7c">More...</a><br /></td></tr>
<tr class="separator:afcbf87c5cd2944802444e9815295aa7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d63fefb7166e5714ffefc4d37ed2d47"><td class="memItemLeft" align="right" valign="top">typedef int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a6d63fefb7166e5714ffefc4d37ed2d47">xtio_spi_read_t</a>) (void *spi_handle, uint8_t *read_buffer, uint32_t number_of_bytes_to_read)</td></tr>
<tr class="memdesc:a6d63fefb7166e5714ffefc4d37ed2d47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Typedef of callback function for reading through SPI.  <a href="#a6d63fefb7166e5714ffefc4d37ed2d47">More...</a><br /></td></tr>
<tr class="separator:a6d63fefb7166e5714ffefc4d37ed2d47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48830ad7630e8e1d1faa44c64efc747f"><td class="memItemLeft" align="right" valign="top">typedef int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a48830ad7630e8e1d1faa44c64efc747f">xtio_spi_write_read_t</a>) (void *spi_handle, uint8_t *write_buffer, uint32_t number_of_bytes_to_write, uint8_t *read_buffer, uint32_t number_of_bytes_to_read)</td></tr>
<tr class="memdesc:a48830ad7630e8e1d1faa44c64efc747f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Typedef of callback function for write + read through SPI.  <a href="#a48830ad7630e8e1d1faa44c64efc747f">More...</a><br /></td></tr>
<tr class="separator:a48830ad7630e8e1d1faa44c64efc747f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a92e0221f7ca588ab70b2b5c7348186f7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> { <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7af94e6911231594aff63156dd46a493f9">XT_SUCCESS</a> = 0, 
<a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7a696ef68b6db1d1a578945a52c17732cc">XT_NOT_IMPLEMENTED</a> = 900, 
<a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7a8e9b114d7e549fce776d183c7ffe2195">XT_ERROR</a> = 999
 }</td></tr>
<tr class="separator:a92e0221f7ca588ab70b2b5c7348186f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c78fcc61198540c7c32fbe185095094"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a9c78fcc61198540c7c32fbe185095094">xt_selftest_code_t</a> { <a class="el" href="xep__hal_8h.xhtml#a9c78fcc61198540c7c32fbe185095094a584ab6a62ee1306750a93623bf8b198d">XT_SELFTEST_EXT_RAM</a> = 0x10, 
<a class="el" href="xep__hal_8h.xhtml#a9c78fcc61198540c7c32fbe185095094a5399adf8d4e8ee8dda7fe542b25ed24d">XT_SELFTEST_IO_INTERCONNECT</a> = 0x20
 }<tr class="memdesc:a9c78fcc61198540c7c32fbe185095094"><td class="mdescLeft">&#160;</td><td class="mdescRight">ID of a selftest.  <a href="xep__hal_8h.xhtml#a9c78fcc61198540c7c32fbe185095094">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a9c78fcc61198540c7c32fbe185095094"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af58e0890a0aeecb7d4301c4dc3e4115d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da954804eef3f19c7003ad7717dd2db347">XT_OPMODE_FACTORY</a> = 0, 
<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da2d826b2a5a96acfbdd8056be1d29fb81">XT_OPMODE_SPI</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da9d42a19c5a352192c0a7b8c7be8daba6">XT_OPMODE_GPIO</a> = 2, 
<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da552daf0181a4fdec71585537850812a0">XT_OPMODE_SERIAL</a> = 3, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da9e68d3056bb9e86ea9f47bab0762632d">XT_OPMODE_UNINITIALIZED</a> = 0xFF
<br />
 }<tr class="memdesc:af58e0890a0aeecb7d4301c4dc3e4115d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operation mode.  <a href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:af58e0890a0aeecb7d4301c4dc3e4115d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03d192f5543ec51c3b36ab5b022d8fcc"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccac2e1f8e6be69b0f41db8ebdcce1fcd39">XT_SWRST_NONE</a> = 0x00, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccaf53371b99fc85bbd247d78c2f7141ad5">XT_SWRST_INTENDED</a> = 0x01, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca0a7e81c6eaf6120fdc84f9f895eee17a">XT_SWRST_BOOTLOADER</a> = 0x02, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca238d7daef58554b6fab408f05e1d1b45">XT_SWRST_SYSTEM_MONITOR</a> = 0x10, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca44df7b604eff7e025d31852eae42ad6d">XT_SWRST_MALLOC_FAILED</a> = 0x11, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca236bbe24c234e628582c62d2880617e2">XT_SWRST_STACK_OVERFLOW</a> = 0x12, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca1e62a39b080510c57e3801abc7ede608">XT_SWRST_HARDFAULT</a> = 0x13, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca7e537acfc3b826e57184bfda1aecb9ce">XT_SWRST_MEMMANAGE</a> = 0x14, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccaf36515c9f5557670f8783b137ca933ff">XT_SWRST_BUSFAULT</a> = 0x15, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca091e9119bd72e6996587651046ee3ce8">XT_SWRST_USAGEFAULT</a> = 0x16, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca4cb2e496fa9c68defa4afc21fd513264">XT_SWRST_DEBUGMON</a> = 0x17, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccad0d7f4b9927a190383c1b1a9458a0539">XT_SWRST_NMI</a> = 0x18, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccac2c0356dbd9d4785caaa049817b32a1d">XT_SWRST_HOSTCOMMAND</a> = 0x30, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca5eeb7d6d7a101bc18c2b3d4c09786f72">XT_SWRST_APPUNLOAD</a> = 0x40, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca62e3cfe8d1252c5e09cac4a6aa43bd82">XT_SWRST_UNDEFINED</a> = 0x50
<br />
 }<tr class="memdesc:a03d192f5543ec51c3b36ab5b022d8fcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cause of a software-triggered reset.  <a href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a03d192f5543ec51c3b36ab5b022d8fcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d045520d5e2aa2f3bc58de038a43c49"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49ada0ed79c1d64b9c97a22be57e0633c51">XTIO_XETHRU_IO1</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49af18e480230702a15a4862169df364bec">XTIO_XETHRU_IO2</a> = 2, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a75d16332cd4aeab3d880a557744f2234">XTIO_XETHRU_IO3</a> = 3, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a166beeafc6d0369cffb352b87564d520">XTIO_XETHRU_IO4</a> = 4, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49aa6b5da273178793ce307437bf81b8d2a">XTIO_XETHRU_IO5</a> = 5, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a586fe434c74a67499e8bb8d891825416">XTIO_XETHRU_IO6</a> = 6, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a8cb663887552be5637f054af69e75d93">XTIO_XETHRU_IO7</a> = 7, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49aaf3d8e50251d73566b3e6f5a87bf1eba">XTIO_XETHRU_IO8</a> = 8, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49af7cd773157ae654c55e6f99d1a0122f5">XTIO_XETHRU_IO9</a> = 9, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a6fa37fa1ca47e867517cb22d29a9102d">XTIO_X4_IO1</a> = 41, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a8f9c15ebdeb32fea70a689c16304d8d9">XTIO_X4_IO2</a> = 42, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49acdcb9c0c1057227930241235ea426e90">XTIO_X4_ENABLE</a> = 49, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49ae3650a7541762c434a47b929622f8cae">XTIO_USB_VBUS</a> = 90
<br />
 }<tr class="memdesc:a2d045520d5e2aa2f3bc58de038a43c49"><td class="mdescLeft">&#160;</td><td class="mdescRight">ID of all IO pins that may be available.  <a href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a2d045520d5e2aa2f3bc58de038a43c49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a396877b2b28db63069691151b759a5cb"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">xtio_interrupt_modes</a> { <a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cba73eb6fa29703c57e721e4ecd14e9c98c">XTIO_INTERRUPT_NONE</a> = 0, 
<a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cbaa9cfa9c0c4dbaeb08105bcf3b8b85026">XTIO_INTERRUPT_RISING_EDGE</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cbacdd88aad5e85dba99c90e24394ed123f">XTIO_INTERRUPT_FALLING_EDGE</a> = 2
 }<tr class="memdesc:a396877b2b28db63069691151b759a5cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Trigger mode for interrupt on IO pins.  <a href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a396877b2b28db63069691151b759a5cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bb288b15f8da9edbbb414d0b72dd9a4"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4">xtio_pin_direction_t</a> { <a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4aa1881efe569101feb8fe91619f3ff3c3">XTIO_INPUT</a>, 
<a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4aecd7fde249f00325cb7d875268f7709b">XTIO_OUTPUT</a>
 }<tr class="memdesc:a8bb288b15f8da9edbbb414d0b72dd9a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">IO pin direction "macroes".  <a href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a8bb288b15f8da9edbbb414d0b72dd9a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c2710d0b7b7fdbe602d1159aca07e5b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> { <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5ba3c64f5e24ae70f2b3c81d1bcadeb2a9c">XTIO_PIN_LEVEL_LOW</a>, 
<a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5baae5dced8083873daa158eef83cadd409">XTIO_PIN_LEVEL_HIGH</a>
 }<tr class="memdesc:a1c2710d0b7b7fdbe602d1159aca07e5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">IOPORT levels.  <a href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a1c2710d0b7b7fdbe602d1159aca07e5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe742b85eb29e92e6acc722cb848ffc8"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8a09fca6c55c289371ea748d7af62e1a6f">XTIO_LED_RED</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8ad9cd549bfe27dd71e6582f8b44a5fab2">XTIO_LED_GREEN</a> = 2, 
<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8acceb3b7da3eb33cf2240983c079e260a">XTIO_LED_BLUE</a> = 3, 
<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8a691f66251ce6a1ebe9802eaa5a7c9fb0">XTIO_LED_YELLOW</a> = 4, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8a66d8899079b805c8552f73787b5c1baa">XTIO_LED_WHITE</a> = 5
<br />
 }<tr class="memdesc:abe742b85eb29e92e6acc722cb848ffc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">ID of all LEDs that may be available.  <a href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:abe742b85eb29e92e6acc722cb848ffc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae05ac0ba669068133f24e75a6302a21"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21">xtio_led_mode_t</a> { <a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21a0888088ed0d9076ccade01e5055cd3c3">XTIO_LED_ONOFF</a>, 
<a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21aca819c01ee17e78f6b69acfd6968725b">XTIO_LED_PWM</a>
 }<tr class="memdesc:aae05ac0ba669068133f24e75a6302a21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mode for LEDs that may be available.  <a href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:aae05ac0ba669068133f24e75a6302a21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8a6b1a6e624c4ff2c5e2af26685afb8"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">xtio_led_state_t</a> { <a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8a2b49a372e9704e1f8a5bba6849009a88">XTIO_LED_OFF</a> = 0, 
<a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8af085e9845957f7aece9dba3bed4393de">XTIO_LED_ON</a> = 1
 }<tr class="memdesc:ad8a6b1a6e624c4ff2c5e2af26685afb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">States for LEDs that may be available.  <a href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ad8a6b1a6e624c4ff2c5e2af26685afb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad084a0a637f44d3c04365d5b654fab1d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da37b9d3ca0bda18ac655a9f7b84f17a96">XTIO_SUCCESS</a> = XT_SUCCESS, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da34ac40338d44b5fbc9d032eae0d8efbe">XTIO_WRONG_PIN_ID</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da7ab2ad5d11b8ba20f580681316046cc4">XTIO_IO_FUNCTION_NOT_AVAILABLE</a> = 2, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da46542e3b2a85053e1893e2bb6ed698d1">XTIO_INTERRUPT_NOT_AVAILABLE</a> = 3, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da64d16083198f43d1647d180bfa2f5ee1">XTIO_MODE_NOT_SUPPORTED</a> = 4, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da8035212b6e7def315eb3ea5bc7583562">XTIO_WRONG_LED_ID</a> = 10, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da46ff9649ec8eba93a55dfb6bed211472">XTIO_LED_MODE_NOT_AVAILABLE</a> = 11
<br />
 }<tr class="memdesc:ad084a0a637f44d3c04365d5b654fab1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Error codes for Xethru IO driver.  <a href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ad084a0a637f44d3c04365d5b654fab1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2897da58f31f3de27446d9f20befe52"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52">xtio_spi_mode_t</a> { <a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52ac83ef9810c154e4733e9aca74ef373ac">XTIO_SPI_NONE</a>, 
<a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52a7095e024bdce09c893562e92806fd94f">XTIO_SPI</a>, 
<a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52a27b829cf1a5f1a0602f5c69d16981adc">XTIO_QSPI</a>
 }</td></tr>
<tr class="separator:ab2897da58f31f3de27446d9f20befe52"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ab9b8be01cc5338f2a5b10e5c79b86910"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ab9b8be01cc5338f2a5b10e5c79b86910">xt_board_init</a> (void)</td></tr>
<tr class="memdesc:ab9b8be01cc5338f2a5b10e5c79b86910"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate basic HW functionality on HW board and MCU.  <a href="#ab9b8be01cc5338f2a5b10e5c79b86910">More...</a><br /></td></tr>
<tr class="separator:ab9b8be01cc5338f2a5b10e5c79b86910"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afed868f7f00e42b1e2ad4914f557d5b4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#afed868f7f00e42b1e2ad4914f557d5b4">xt_board_init_ext</a> (uint8_t interfaceMode)</td></tr>
<tr class="memdesc:afed868f7f00e42b1e2ad4914f557d5b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate extended HW functionality on HW board and MCU.  <a href="#afed868f7f00e42b1e2ad4914f557d5b4">More...</a><br /></td></tr>
<tr class="separator:afed868f7f00e42b1e2ad4914f557d5b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23a7563c734f3b439d1d26f0598fafe7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a23a7563c734f3b439d1d26f0598fafe7">xt_run_selftest</a> (uint8_t testcode, <a class="el" href="structxt__test__result__t.xhtml">xt_test_result_t</a> *test_result)</td></tr>
<tr class="memdesc:a23a7563c734f3b439d1d26f0598fafe7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs the specified selftest.  <a href="#a23a7563c734f3b439d1d26f0598fafe7">More...</a><br /></td></tr>
<tr class="separator:a23a7563c734f3b439d1d26f0598fafe7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e58faffa8a7b0934ca76bc1fa5ef6fa"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a8e58faffa8a7b0934ca76bc1fa5ef6fa">xt_wait</a> (uint32_t ms_to_wait)</td></tr>
<tr class="memdesc:a8e58faffa8a7b0934ca76bc1fa5ef6fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Causes the calling FreeRTOS task to wait.  <a href="#a8e58faffa8a7b0934ca76bc1fa5ef6fa">More...</a><br /></td></tr>
<tr class="separator:a8e58faffa8a7b0934ca76bc1fa5ef6fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace2af126089abe1d676edfc1400d0bf7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ace2af126089abe1d676edfc1400d0bf7">xt_software_reset</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> reason)</td></tr>
<tr class="memdesc:ace2af126089abe1d676edfc1400d0bf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Triggers a software reset of MCU.  <a href="#ace2af126089abe1d676edfc1400d0bf7">More...</a><br /></td></tr>
<tr class="separator:ace2af126089abe1d676edfc1400d0bf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e62effeb5c5323c3d423225a6a3dbf3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a5e62effeb5c5323c3d423225a6a3dbf3">xt_get_reset_reason</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> *reason)</td></tr>
<tr class="memdesc:a5e62effeb5c5323c3d423225a6a3dbf3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the cause of the previous software reset.  <a href="#a5e62effeb5c5323c3d423225a6a3dbf3">More...</a><br /></td></tr>
<tr class="separator:a5e62effeb5c5323c3d423225a6a3dbf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a389bc6b896aa270d8a1e473dd9c32ffc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a389bc6b896aa270d8a1e473dd9c32ffc">xt_set_reset_reason</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> reason)</td></tr>
<tr class="memdesc:a389bc6b896aa270d8a1e473dd9c32ffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the cause of the coming software reset.  <a href="#a389bc6b896aa270d8a1e473dd9c32ffc">More...</a><br /></td></tr>
<tr class="separator:a389bc6b896aa270d8a1e473dd9c32ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba84ec695575730f2fd3b4f75eefe28a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aba84ec695575730f2fd3b4f75eefe28a">xt_feed_watchdog</a> (void)</td></tr>
<tr class="memdesc:aba84ec695575730f2fd3b4f75eefe28a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the watchdog timer.  <a href="#aba84ec695575730f2fd3b4f75eefe28a">More...</a><br /></td></tr>
<tr class="separator:aba84ec695575730f2fd3b4f75eefe28a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1f57228b9448df87a3f5f30968b3fa8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#af1f57228b9448df87a3f5f30968b3fa8">xt_get_operation_mode</a> (void)</td></tr>
<tr class="memdesc:af1f57228b9448df87a3f5f30968b3fa8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the operation mode of the module.  <a href="#af1f57228b9448df87a3f5f30968b3fa8">More...</a><br /></td></tr>
<tr class="separator:af1f57228b9448df87a3f5f30968b3fa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f087fae5e8098b3b9c8f9df124b7f4e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a4f087fae5e8098b3b9c8f9df124b7f4e">xtio_set_direction</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, int direction, int level)</td></tr>
<tr class="memdesc:a4f087fae5e8098b3b9c8f9df124b7f4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set direction of specified IO pin.  <a href="#a4f087fae5e8098b3b9c8f9df124b7f4e">More...</a><br /></td></tr>
<tr class="separator:a4f087fae5e8098b3b9c8f9df124b7f4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a387b000f6fb5128449611d9fe0e47369"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a387b000f6fb5128449611d9fe0e47369">xtio_set_level</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, int level)</td></tr>
<tr class="memdesc:a387b000f6fb5128449611d9fe0e47369"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the level of specified IO pin.  <a href="#a387b000f6fb5128449611d9fe0e47369">More...</a><br /></td></tr>
<tr class="separator:a387b000f6fb5128449611d9fe0e47369"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab37c30dc5bf179f86b20907fb42e1e4d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ab37c30dc5bf179f86b20907fb42e1e4d">xtio_toggle_level</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id)</td></tr>
<tr class="memdesc:ab37c30dc5bf179f86b20907fb42e1e4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggle the level of specified IO pin.  <a href="#ab37c30dc5bf179f86b20907fb42e1e4d">More...</a><br /></td></tr>
<tr class="separator:ab37c30dc5bf179f86b20907fb42e1e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28a34b2db420bacc2f465b1af3f7ca8a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a28a34b2db420bacc2f465b1af3f7ca8a">xtio_get_level</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, int *level)</td></tr>
<tr class="memdesc:a28a34b2db420bacc2f465b1af3f7ca8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get level of specified IO pin.  <a href="#a28a34b2db420bacc2f465b1af3f7ca8a">More...</a><br /></td></tr>
<tr class="separator:a28a34b2db420bacc2f465b1af3f7ca8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c169f60838175920c2f9ab467d020c1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a9c169f60838175920c2f9ab467d020c1">xtio_set_pin_mode</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, uint32_t mode)</td></tr>
<tr class="memdesc:a9c169f60838175920c2f9ab467d020c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set mode for specified IO pin.  <a href="#a9c169f60838175920c2f9ab467d020c1">More...</a><br /></td></tr>
<tr class="separator:a9c169f60838175920c2f9ab467d020c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90b22ca935e03d989e5572a9aa8bf29c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a90b22ca935e03d989e5572a9aa8bf29c">xtio_irq_register_callback</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, void(*irq_callback)(void), <a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">xtio_interrupt_modes</a> mode)</td></tr>
<tr class="memdesc:a90b22ca935e03d989e5572a9aa8bf29c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register interrupt callback function.  <a href="#a90b22ca935e03d989e5572a9aa8bf29c">More...</a><br /></td></tr>
<tr class="separator:a90b22ca935e03d989e5572a9aa8bf29c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f8214e214e26de85a41a1b0af1fc6d7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a8f8214e214e26de85a41a1b0af1fc6d7">xtio_irq_unregister_callback</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id)</td></tr>
<tr class="memdesc:a8f8214e214e26de85a41a1b0af1fc6d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unregister interrupt handler.  <a href="#a8f8214e214e26de85a41a1b0af1fc6d7">More...</a><br /></td></tr>
<tr class="separator:a8f8214e214e26de85a41a1b0af1fc6d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02d431b74bbdd1cc5d4ff79903f7ebd6"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a02d431b74bbdd1cc5d4ff79903f7ebd6">xtio_led_init</a> (<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> led_id, int mode, float led_state)</td></tr>
<tr class="memdesc:a02d431b74bbdd1cc5d4ff79903f7ebd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate LED.  <a href="#a02d431b74bbdd1cc5d4ff79903f7ebd6">More...</a><br /></td></tr>
<tr class="separator:a02d431b74bbdd1cc5d4ff79903f7ebd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea9d8137a0fddb8ed22f14f318dfec4f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aea9d8137a0fddb8ed22f14f318dfec4f">xtio_led_set_state</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> led_id, float led_state)</td></tr>
<tr class="memdesc:aea9d8137a0fddb8ed22f14f318dfec4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set LED state.  <a href="#aea9d8137a0fddb8ed22f14f318dfec4f">More...</a><br /></td></tr>
<tr class="separator:aea9d8137a0fddb8ed22f14f318dfec4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8a7b093baba56abe7b2f64e2221ba40"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ae8a7b093baba56abe7b2f64e2221ba40">xtio_led_toggle_state</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> led_id)</td></tr>
<tr class="memdesc:ae8a7b093baba56abe7b2f64e2221ba40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggle LED state.  <a href="#ae8a7b093baba56abe7b2f64e2221ba40">More...</a><br /></td></tr>
<tr class="separator:ae8a7b093baba56abe7b2f64e2221ba40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3e424512de2e10133b2ffe41f6577ea"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aa3e424512de2e10133b2ffe41f6577ea">xtio_extram_init</a> (void)</td></tr>
<tr class="memdesc:aa3e424512de2e10133b2ffe41f6577ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize external RAM if available.  <a href="#aa3e424512de2e10133b2ffe41f6577ea">More...</a><br /></td></tr>
<tr class="separator:aa3e424512de2e10133b2ffe41f6577ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6d44e13075b75829e0be597a7537a3c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#af6d44e13075b75829e0be597a7537a3c">xtio_spi_init</a> (<a class="el" href="structxtio__spi__handle__t.xhtml">xtio_spi_handle_t</a> **spi_handle, void *instance_memory, <a class="el" href="structxtio__spi__callbacks__t.xhtml">xtio_spi_callbacks_t</a> *spi_callbacks, void *user_reference, <a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52">xtio_spi_mode_t</a> default_spi_mode)</td></tr>
<tr class="memdesc:af6d44e13075b75829e0be597a7537a3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the SPI system.  <a href="#af6d44e13075b75829e0be597a7537a3c">More...</a><br /></td></tr>
<tr class="separator:af6d44e13075b75829e0be597a7537a3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabfaadd9f4133263d269fda639c42b50"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aabfaadd9f4133263d269fda639c42b50">xtio_spi_get_instance_size</a> (void)</td></tr>
<tr class="memdesc:aabfaadd9f4133263d269fda639c42b50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate necessary memory for xtio_spi interface.  <a href="#aabfaadd9f4133263d269fda639c42b50">More...</a><br /></td></tr>
<tr class="separator:aabfaadd9f4133263d269fda639c42b50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44f44f30e6e6a45ec405e61d9bf66c34"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a44f44f30e6e6a45ec405e61d9bf66c34">xtio_usb_available</a> (void)</td></tr>
<tr class="memdesc:a44f44f30e6e6a45ec405e61d9bf66c34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if USB is available and connected.  <a href="#a44f44f30e6e6a45ec405e61d9bf66c34">More...</a><br /></td></tr>
<tr class="separator:a44f44f30e6e6a45ec405e61d9bf66c34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a774bd78f2d1048c26e37640a7e4032d9"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a774bd78f2d1048c26e37640a7e4032d9">xtio_task_usb_init</a> (<a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *xt_protocol)</td></tr>
<tr class="memdesc:a774bd78f2d1048c26e37640a7e4032d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate USB and start necessary tasks.  <a href="#a774bd78f2d1048c26e37640a7e4032d9">More...</a><br /></td></tr>
<tr class="separator:a774bd78f2d1048c26e37640a7e4032d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7245c132bd19ba6ed3ad97529857b614"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a7245c132bd19ba6ed3ad97529857b614">xtio_task_uart_init</a> (<a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *xt_protocol)</td></tr>
<tr class="memdesc:a7245c132bd19ba6ed3ad97529857b614"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate UART and start necessary tasks.  <a href="#a7245c132bd19ba6ed3ad97529857b614">More...</a><br /></td></tr>
<tr class="separator:a7245c132bd19ba6ed3ad97529857b614"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e643456f3adfe39a574aa2cc8caa49e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a9e643456f3adfe39a574aa2cc8caa49e">xtio_host_send</a> (uint8_t *buffer, uint32_t length)</td></tr>
<tr class="memdesc:a9e643456f3adfe39a574aa2cc8caa49e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a data buffer to host through a serial port - USB or UART.  <a href="#a9e643456f3adfe39a574aa2cc8caa49e">More...</a><br /></td></tr>
<tr class="separator:a9e643456f3adfe39a574aa2cc8caa49e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a143e7abdc640864b988cc34a2d53fd81"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a143e7abdc640864b988cc34a2d53fd81">xtio_serial_com_init</a> (<a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *xt_protocol)</td></tr>
<tr class="memdesc:a143e7abdc640864b988cc34a2d53fd81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate serial communication - USB if available, otherwise UART.  <a href="#a143e7abdc640864b988cc34a2d53fd81">More...</a><br /></td></tr>
<tr class="separator:a143e7abdc640864b988cc34a2d53fd81"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Brief description. </p>
<p>Longer description </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="abaf0e993cd739df6f7c90cf5f6a1a593"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaf0e993cd739df6f7c90cf5f6a1a593">&sect;&nbsp;</a></span>XT_SELFTEST_DATA_LENGTH</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XT_SELFTEST_DATA_LENGTH&#160;&#160;&#160;256</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adff4345ea8836266d999a952cd7b200b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adff4345ea8836266d999a952cd7b200b">&sect;&nbsp;</a></span>XTIO_FLOATING</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_FLOATING&#160;&#160;&#160;0x0030</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>No pull ups enabled. </p>

</div>
</div>
<a id="ab3d52480192cb2985bd524ee3e1b4c8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3d52480192cb2985bd524ee3e1b4c8d">&sect;&nbsp;</a></span>XTIO_GPIO_MODE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_GPIO_MODE&#160;&#160;&#160;0x0001</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Normal GPIO mode - this is default mode. </p>

</div>
</div>
<a id="aa9793193337497d6f1a56c5cdb708300"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9793193337497d6f1a56c5cdb708300">&sect;&nbsp;</a></span>XTIO_INTERRUPT_MODE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_INTERRUPT_MODE&#160;&#160;&#160;0x0002</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable interrupt for IO pin. </p>

</div>
</div>
<a id="a0402ba24c9ec87157bfd25fc9c033e3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0402ba24c9ec87157bfd25fc9c033e3e">&sect;&nbsp;</a></span>XTIO_PULL_DOWN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_PULL_DOWN&#160;&#160;&#160;0x0020</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pull down enabled. </p>

</div>
</div>
<a id="af0aca13b2e9f6051822058e890a02650"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0aca13b2e9f6051822058e890a02650">&sect;&nbsp;</a></span>XTIO_PULL_UP</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_PULL_UP&#160;&#160;&#160;0x0010</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pull up enabled. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a4611b605e45ab401f02cab15c5e38715"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4611b605e45ab401f02cab15c5e38715">&sect;&nbsp;</a></span>float32_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef float <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>32-bit floating-point type definition. </p>

</div>
</div>
<a id="abd8e61df225a326c619c2e28b16a64c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd8e61df225a326c619c2e28b16a64c9">&sect;&nbsp;</a></span>xtio_get_spi_mode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(*  xtio_get_spi_mode_t) (void *spi_handle, <a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52">xtio_spi_mode_t</a> *xtio_spi_mode)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Typedef of callback function for getting SPI mode. </p>

</div>
</div>
<a id="ac9739683364e9e73b35913009d80d6d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9739683364e9e73b35913009d80d6d3">&sect;&nbsp;</a></span>xtio_set_spi_mode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(*  xtio_set_spi_mode_t) (void *spi_handle, <a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52">xtio_spi_mode_t</a> xtio_spi_mode)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Typedef of callback function for setting SPI mode. </p>

</div>
</div>
<a id="a6d63fefb7166e5714ffefc4d37ed2d47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d63fefb7166e5714ffefc4d37ed2d47">&sect;&nbsp;</a></span>xtio_spi_read_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(*  xtio_spi_read_t) (void *spi_handle, uint8_t *read_buffer, uint32_t number_of_bytes_to_read)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Typedef of callback function for reading through SPI. </p>

</div>
</div>
<a id="a48830ad7630e8e1d1faa44c64efc747f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48830ad7630e8e1d1faa44c64efc747f">&sect;&nbsp;</a></span>xtio_spi_write_read_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(*  xtio_spi_write_read_t) (void *spi_handle, uint8_t *write_buffer, uint32_t number_of_bytes_to_write, uint8_t *read_buffer, uint32_t number_of_bytes_to_read)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Typedef of callback function for write + read through SPI. </p>

</div>
</div>
<a id="afcbf87c5cd2944802444e9815295aa7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcbf87c5cd2944802444e9815295aa7c">&sect;&nbsp;</a></span>xtio_spi_write_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(*  xtio_spi_write_t) (void *spi_handle, uint8_t *write_buffer, uint32_t number_of_bytes_to_write)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Typedef of callback function for writing through SPI. </p>

</div>
</div>
<a id="a3c505a1c06065976774a1f8e0c34c0a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c505a1c06065976774a1f8e0c34c0a3">&sect;&nbsp;</a></span>xtProtocol</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> <a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a92e0221f7ca588ab70b2b5c7348186f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92e0221f7ca588ab70b2b5c7348186f7">&sect;&nbsp;</a></span>xt_error_codes_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a92e0221f7ca588ab70b2b5c7348186f7af94e6911231594aff63156dd46a493f9"></a>XT_SUCCESS&#160;</td><td class="fielddoc"><p>Return value of a function that executed successfully. </p>
</td></tr>
<tr><td class="fieldname"><a id="a92e0221f7ca588ab70b2b5c7348186f7a696ef68b6db1d1a578945a52c17732cc"></a>XT_NOT_IMPLEMENTED&#160;</td><td class="fielddoc"><p>Return value of a function that is not implemented. </p>
</td></tr>
<tr><td class="fieldname"><a id="a92e0221f7ca588ab70b2b5c7348186f7a8e9b114d7e549fce776d183c7ffe2195"></a>XT_ERROR&#160;</td><td class="fielddoc"><p>Return value of a function where an unspecified error occured. </p>
</td></tr>
</table>

</div>
</div>
<a id="af58e0890a0aeecb7d4301c4dc3e4115d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af58e0890a0aeecb7d4301c4dc3e4115d">&sect;&nbsp;</a></span>xt_opmode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Operation mode. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da954804eef3f19c7003ad7717dd2db347"></a>XT_OPMODE_FACTORY&#160;</td><td class="fielddoc"><p>Factory test mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da2d826b2a5a96acfbdd8056be1d29fb81"></a>XT_OPMODE_SPI&#160;</td><td class="fielddoc"><p>SPI communication mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da9d42a19c5a352192c0a7b8c7be8daba6"></a>XT_OPMODE_GPIO&#160;</td><td class="fielddoc"><p>GPIO communication mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da552daf0181a4fdec71585537850812a0"></a>XT_OPMODE_SERIAL&#160;</td><td class="fielddoc"><p>UART communication mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da9e68d3056bb9e86ea9f47bab0762632d"></a>XT_OPMODE_UNINITIALIZED&#160;</td><td class="fielddoc"><p>Mode is not initialized. </p>
</td></tr>
</table>

</div>
</div>
<a id="a9c78fcc61198540c7c32fbe185095094"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c78fcc61198540c7c32fbe185095094">&sect;&nbsp;</a></span>xt_selftest_code_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a9c78fcc61198540c7c32fbe185095094">xt_selftest_code_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>ID of a selftest. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a9c78fcc61198540c7c32fbe185095094a584ab6a62ee1306750a93623bf8b198d"></a>XT_SELFTEST_EXT_RAM&#160;</td><td class="fielddoc"><p>External RAM test. </p>
</td></tr>
<tr><td class="fieldname"><a id="a9c78fcc61198540c7c32fbe185095094a5399adf8d4e8ee8dda7fe542b25ed24d"></a>XT_SELFTEST_IO_INTERCONNECT&#160;</td><td class="fielddoc"><p>IO interconnection test. </p>
</td></tr>
</table>

</div>
</div>
<a id="a03d192f5543ec51c3b36ab5b022d8fcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03d192f5543ec51c3b36ab5b022d8fcc">&sect;&nbsp;</a></span>xt_swreset_reason_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Cause of a software-triggered reset. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccac2e1f8e6be69b0f41db8ebdcce1fcd39"></a>XT_SWRST_NONE&#160;</td><td class="fielddoc"><p>No cause of reset. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccaf53371b99fc85bbd247d78c2f7141ad5"></a>XT_SWRST_INTENDED&#160;</td><td class="fielddoc"><p>Reset was intentionally triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca0a7e81c6eaf6120fdc84f9f895eee17a"></a>XT_SWRST_BOOTLOADER&#160;</td><td class="fielddoc"><p>Enter bootloader mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca238d7daef58554b6fab408f05e1d1b45"></a>XT_SWRST_SYSTEM_MONITOR&#160;</td><td class="fielddoc"><p>System monitor detected an unrecoverable error. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca44df7b604eff7e025d31852eae42ad6d"></a>XT_SWRST_MALLOC_FAILED&#160;</td><td class="fielddoc"><p>Failed to allocate memory. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca236bbe24c234e628582c62d2880617e2"></a>XT_SWRST_STACK_OVERFLOW&#160;</td><td class="fielddoc"><p>Overflow in stack. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca1e62a39b080510c57e3801abc7ede608"></a>XT_SWRST_HARDFAULT&#160;</td><td class="fielddoc"><p>MCU HardFault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca7e537acfc3b826e57184bfda1aecb9ce"></a>XT_SWRST_MEMMANAGE&#160;</td><td class="fielddoc"><p>MCU MemManage fault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccaf36515c9f5557670f8783b137ca933ff"></a>XT_SWRST_BUSFAULT&#160;</td><td class="fielddoc"><p>MCU BusFault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca091e9119bd72e6996587651046ee3ce8"></a>XT_SWRST_USAGEFAULT&#160;</td><td class="fielddoc"><p>MCU UsageFault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca4cb2e496fa9c68defa4afc21fd513264"></a>XT_SWRST_DEBUGMON&#160;</td><td class="fielddoc"><p>MCU DebugMon fault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccad0d7f4b9927a190383c1b1a9458a0539"></a>XT_SWRST_NMI&#160;</td><td class="fielddoc"><p>Non-Maskable Interrupt triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccac2c0356dbd9d4785caaa049817b32a1d"></a>XT_SWRST_HOSTCOMMAND&#160;</td><td class="fielddoc"><p>Host requested reset. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca5eeb7d6d7a101bc18c2b3d4c09786f72"></a>XT_SWRST_APPUNLOAD&#160;</td><td class="fielddoc"><p>Application was unloaded. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca62e3cfe8d1252c5e09cac4a6aa43bd82"></a>XT_SWRST_UNDEFINED&#160;</td><td class="fielddoc"><p>Unknown cause of software reset. </p>
</td></tr>
</table>

</div>
</div>
<a id="ad084a0a637f44d3c04365d5b654fab1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad084a0a637f44d3c04365d5b654fab1d">&sect;&nbsp;</a></span>xtio_error_codes_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Error codes for Xethru IO driver. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da37b9d3ca0bda18ac655a9f7b84f17a96"></a>XTIO_SUCCESS&#160;</td><td class="fielddoc"><p>Executed successfully. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da34ac40338d44b5fbc9d032eae0d8efbe"></a>XTIO_WRONG_PIN_ID&#160;</td><td class="fielddoc"><p>Using Pin ID not implemented for this HW board. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da7ab2ad5d11b8ba20f580681316046cc4"></a>XTIO_IO_FUNCTION_NOT_AVAILABLE&#160;</td><td class="fielddoc"><p>IO function not available for this pin. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da46542e3b2a85053e1893e2bb6ed698d1"></a>XTIO_INTERRUPT_NOT_AVAILABLE&#160;</td><td class="fielddoc"><p>Interrupt for this IO pin is not available. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da64d16083198f43d1647d180bfa2f5ee1"></a>XTIO_MODE_NOT_SUPPORTED&#160;</td><td class="fielddoc"><p>IO mode not supported. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da8035212b6e7def315eb3ea5bc7583562"></a>XTIO_WRONG_LED_ID&#160;</td><td class="fielddoc"><p>LED is not present on this board. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da46ff9649ec8eba93a55dfb6bed211472"></a>XTIO_LED_MODE_NOT_AVAILABLE&#160;</td><td class="fielddoc"><p>LED mode not available. </p>
</td></tr>
</table>

</div>
</div>
<a id="a396877b2b28db63069691151b759a5cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a396877b2b28db63069691151b759a5cb">&sect;&nbsp;</a></span>xtio_interrupt_modes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">xtio_interrupt_modes</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Trigger mode for interrupt on IO pins. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a396877b2b28db63069691151b759a5cba73eb6fa29703c57e721e4ecd14e9c98c"></a>XTIO_INTERRUPT_NONE&#160;</td><td class="fielddoc"><p>No interrupt will trigger. </p>
</td></tr>
<tr><td class="fieldname"><a id="a396877b2b28db63069691151b759a5cbaa9cfa9c0c4dbaeb08105bcf3b8b85026"></a>XTIO_INTERRUPT_RISING_EDGE&#160;</td><td class="fielddoc"><p>Interrupt triggers on rising edge. </p>
</td></tr>
<tr><td class="fieldname"><a id="a396877b2b28db63069691151b759a5cbacdd88aad5e85dba99c90e24394ed123f"></a>XTIO_INTERRUPT_FALLING_EDGE&#160;</td><td class="fielddoc"><p>Interrupt triggers on fallin edge. </p>
</td></tr>
</table>

</div>
</div>
<a id="abe742b85eb29e92e6acc722cb848ffc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe742b85eb29e92e6acc722cb848ffc8">&sect;&nbsp;</a></span>xtio_led_id_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>ID of all LEDs that may be available. </p>
<p>Some board implementations may not implement all LEDs. If a LED is not implemented, an error code shall be returned. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8a09fca6c55c289371ea748d7af62e1a6f"></a>XTIO_LED_RED&#160;</td><td class="fielddoc"><p>ID for red LED. </p>
</td></tr>
<tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8ad9cd549bfe27dd71e6582f8b44a5fab2"></a>XTIO_LED_GREEN&#160;</td><td class="fielddoc"><p>ID for green LED. </p>
</td></tr>
<tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8acceb3b7da3eb33cf2240983c079e260a"></a>XTIO_LED_BLUE&#160;</td><td class="fielddoc"><p>ID for blue LED. </p>
</td></tr>
<tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8a691f66251ce6a1ebe9802eaa5a7c9fb0"></a>XTIO_LED_YELLOW&#160;</td><td class="fielddoc"><p>ID for yellow LED. </p>
</td></tr>
<tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8a66d8899079b805c8552f73787b5c1baa"></a>XTIO_LED_WHITE&#160;</td><td class="fielddoc"><p>ID for white LED. </p>
</td></tr>
</table>

</div>
</div>
<a id="aae05ac0ba669068133f24e75a6302a21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae05ac0ba669068133f24e75a6302a21">&sect;&nbsp;</a></span>xtio_led_mode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21">xtio_led_mode_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Mode for LEDs that may be available. </p>
<p>Some board implementations may not implement all LED modes. If a LED mode is not implemented, an error code shall be returned. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aae05ac0ba669068133f24e75a6302a21a0888088ed0d9076ccade01e5055cd3c3"></a>XTIO_LED_ONOFF&#160;</td><td class="fielddoc"><p>LED is ON of OFF. </p>
</td></tr>
<tr><td class="fieldname"><a id="aae05ac0ba669068133f24e75a6302a21aca819c01ee17e78f6b69acfd6968725b"></a>XTIO_LED_PWM&#160;</td><td class="fielddoc"><p>LED is controlled by PWM. </p>
</td></tr>
</table>

</div>
</div>
<a id="ad8a6b1a6e624c4ff2c5e2af26685afb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8a6b1a6e624c4ff2c5e2af26685afb8">&sect;&nbsp;</a></span>xtio_led_state_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">xtio_led_state_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>States for LEDs that may be available. </p>
<p>Some board implementations may not implement all LED states. If a LED state is not implemented, an error code shall be returned.</p>
<p>In addition, PWM controlled LEDs may also be available. Brightness of light is then controlled by a value between 0.0 and 1.0. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ad8a6b1a6e624c4ff2c5e2af26685afb8a2b49a372e9704e1f8a5bba6849009a88"></a>XTIO_LED_OFF&#160;</td><td class="fielddoc"><p>LED is OFF. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad8a6b1a6e624c4ff2c5e2af26685afb8af085e9845957f7aece9dba3bed4393de"></a>XTIO_LED_ON&#160;</td><td class="fielddoc"><p>LED is OFF. </p>
</td></tr>
</table>

</div>
</div>
<a id="a8bb288b15f8da9edbbb414d0b72dd9a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bb288b15f8da9edbbb414d0b72dd9a4">&sect;&nbsp;</a></span>xtio_pin_direction_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4">xtio_pin_direction_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>IO pin direction "macroes". </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a8bb288b15f8da9edbbb414d0b72dd9a4aa1881efe569101feb8fe91619f3ff3c3"></a>XTIO_INPUT&#160;</td><td class="fielddoc"><p>IO pin as input. </p>
</td></tr>
<tr><td class="fieldname"><a id="a8bb288b15f8da9edbbb414d0b72dd9a4aecd7fde249f00325cb7d875268f7709b"></a>XTIO_OUTPUT&#160;</td><td class="fielddoc"><p>IO pin as output. </p>
</td></tr>
</table>

</div>
</div>
<a id="a2d045520d5e2aa2f3bc58de038a43c49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d045520d5e2aa2f3bc58de038a43c49">&sect;&nbsp;</a></span>xtio_pin_id_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>ID of all IO pins that may be available. </p>
<p>Some board implementations may not implement all IO pins. If an IO pin is not implemented, an error code shall be returned. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49ada0ed79c1d64b9c97a22be57e0633c51"></a>XTIO_XETHRU_IO1&#160;</td><td class="fielddoc"><p>ID for IO pin IO1 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49af18e480230702a15a4862169df364bec"></a>XTIO_XETHRU_IO2&#160;</td><td class="fielddoc"><p>ID for IO pin IO2 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a75d16332cd4aeab3d880a557744f2234"></a>XTIO_XETHRU_IO3&#160;</td><td class="fielddoc"><p>ID for IO pin IO3 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a166beeafc6d0369cffb352b87564d520"></a>XTIO_XETHRU_IO4&#160;</td><td class="fielddoc"><p>ID for IO pin IO4 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49aa6b5da273178793ce307437bf81b8d2a"></a>XTIO_XETHRU_IO5&#160;</td><td class="fielddoc"><p>ID for IO pin IO5 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a586fe434c74a67499e8bb8d891825416"></a>XTIO_XETHRU_IO6&#160;</td><td class="fielddoc"><p>ID for IO pin IO6 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a8cb663887552be5637f054af69e75d93"></a>XTIO_XETHRU_IO7&#160;</td><td class="fielddoc"><p>ID for IO pin IO7 on the XeThru 16 pin connector. </p>
<p>This pin can also function as WAKEUP and should normally not be used as an IO pin </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49aaf3d8e50251d73566b3e6f5a87bf1eba"></a>XTIO_XETHRU_IO8&#160;</td><td class="fielddoc"><p>ID for IO pin IO8 on the XeThru 16 pin connector. </p>
<p>This pin can also function as SWCLK and should normally not be used as an IO pin </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49af7cd773157ae654c55e6f99d1a0122f5"></a>XTIO_XETHRU_IO9&#160;</td><td class="fielddoc"><p>ID for IO pin IO9 on the XeThru 16 pin connector. </p>
<p>This pin can also function as SWDIO and should normally not be used as an IO pin </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a6fa37fa1ca47e867517cb22d29a9102d"></a>XTIO_X4_IO1&#160;</td><td class="fielddoc"><p>ID for IO pin X4_IO1 on tin the X4 Radar IC This pin can also have functions other than GPIO during communication with X4. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a8f9c15ebdeb32fea70a689c16304d8d9"></a>XTIO_X4_IO2&#160;</td><td class="fielddoc"><p>ID for IO pin X4_IO2 on tin the X4 Radar IC This pin can also have functions other than GPIO during communication with X4. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49acdcb9c0c1057227930241235ea426e90"></a>XTIO_X4_ENABLE&#160;</td><td class="fielddoc"><p>ID for IO pin X4_ENABLE on tin the X4 Radar IC. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49ae3650a7541762c434a47b929622f8cae"></a>XTIO_USB_VBUS&#160;</td><td class="fielddoc"><p>ID for IO pin sensing USB VBUS. </p>
</td></tr>
</table>

</div>
</div>
<a id="a1c2710d0b7b7fdbe602d1159aca07e5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c2710d0b7b7fdbe602d1159aca07e5b">&sect;&nbsp;</a></span>xtio_pin_level_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>IOPORT levels. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a1c2710d0b7b7fdbe602d1159aca07e5ba3c64f5e24ae70f2b3c81d1bcadeb2a9c"></a>XTIO_PIN_LEVEL_LOW&#160;</td><td class="fielddoc"><p>IOPORT pin value low. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1c2710d0b7b7fdbe602d1159aca07e5baae5dced8083873daa158eef83cadd409"></a>XTIO_PIN_LEVEL_HIGH&#160;</td><td class="fielddoc"><p>IOPORT pin value high. </p>
</td></tr>
</table>

</div>
</div>
<a id="ab2897da58f31f3de27446d9f20befe52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2897da58f31f3de27446d9f20befe52">&sect;&nbsp;</a></span>xtio_spi_mode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52">xtio_spi_mode_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ab2897da58f31f3de27446d9f20befe52ac83ef9810c154e4733e9aca74ef373ac"></a>XTIO_SPI_NONE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab2897da58f31f3de27446d9f20befe52a7095e024bdce09c893562e92806fd94f"></a>XTIO_SPI&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab2897da58f31f3de27446d9f20befe52a27b829cf1a5f1a0602f5c69d16981adc"></a>XTIO_QSPI&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ab9b8be01cc5338f2a5b10e5c79b86910"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9b8be01cc5338f2a5b10e5c79b86910">&sect;&nbsp;</a></span>xt_board_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_board_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate basic HW functionality on HW board and MCU. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<p>TWI0 configuration.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ab9b8be01cc5338f2a5b10e5c79b86910_cgraph.svg" width="338" height="424"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ab9b8be01cc5338f2a5b10e5c79b86910_icgraph.svg" width="278" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afed868f7f00e42b1e2ad4914f557d5b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afed868f7f00e42b1e2ad4914f557d5b4">&sect;&nbsp;</a></span>xt_board_init_ext()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_board_init_ext </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>interfaceMode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate extended HW functionality on HW board and MCU. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">interfaceMode</td><td>Default interface mode </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_afed868f7f00e42b1e2ad4914f557d5b4_cgraph.svg" width="332" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_afed868f7f00e42b1e2ad4914f557d5b4_icgraph.svg" width="244" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aba84ec695575730f2fd3b4f75eefe28a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba84ec695575730f2fd3b4f75eefe28a">&sect;&nbsp;</a></span>xt_feed_watchdog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_feed_watchdog </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset the watchdog timer. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aba84ec695575730f2fd3b4f75eefe28a_icgraph.svg" width="303" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af1f57228b9448df87a3f5f30968b3fa8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1f57228b9448df87a3f5f30968b3fa8">&sect;&nbsp;</a></span>xt_get_operation_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> xt_get_operation_mode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the operation mode of the module. </p>
<dl class="section return"><dt>Returns</dt><dd>Operation mode as defined in <a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_af1f57228b9448df87a3f5f30968b3fa8_icgraph.svg" width="412" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5e62effeb5c5323c3d423225a6a3dbf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e62effeb5c5323c3d423225a6a3dbf3">&sect;&nbsp;</a></span>xt_get_reset_reason()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_reset_reason </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> *&#160;</td>
          <td class="paramname"><em>reason</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the cause of the previous software reset. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reason</td><td>Reset reason as defined in <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a5e62effeb5c5323c3d423225a6a3dbf3_cgraph.svg" width="364" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a23a7563c734f3b439d1d26f0598fafe7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23a7563c734f3b439d1d26f0598fafe7">&sect;&nbsp;</a></span>xt_run_selftest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_run_selftest </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>testcode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structxt__test__result__t.xhtml">xt_test_result_t</a> *&#160;</td>
          <td class="paramname"><em>test_result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs the specified selftest. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">testcode</td><td>Test to run as defined in <a class="el" href="xep__hal_8h.xhtml#a9c78fcc61198540c7c32fbe185095094">xt_selftest_code_t</a> </td></tr>
    <tr><td class="paramname">test_result</td><td>Pointer to struct that will hold result of test </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a23a7563c734f3b439d1d26f0598fafe7_cgraph.svg" width="323" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a23a7563c734f3b439d1d26f0598fafe7_icgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a389bc6b896aa270d8a1e473dd9c32ffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a389bc6b896aa270d8a1e473dd9c32ffc">&sect;&nbsp;</a></span>xt_set_reset_reason()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_set_reset_reason </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>&#160;</td>
          <td class="paramname"><em>reason</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the cause of the coming software reset. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reason</td><td>Reset reason as defined in <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a389bc6b896aa270d8a1e473dd9c32ffc_icgraph.svg" width="434" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ace2af126089abe1d676edfc1400d0bf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace2af126089abe1d676edfc1400d0bf7">&sect;&nbsp;</a></span>xt_software_reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_software_reset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>&#160;</td>
          <td class="paramname"><em>reason</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Triggers a software reset of MCU. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reason</td><td>Reset reason as defined in <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ace2af126089abe1d676edfc1400d0bf7_cgraph.svg" width="346" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ace2af126089abe1d676edfc1400d0bf7_icgraph.svg" width="402" height="544"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8e58faffa8a7b0934ca76bc1fa5ef6fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e58faffa8a7b0934ca76bc1fa5ef6fa">&sect;&nbsp;</a></span>xt_wait()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_wait </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ms_to_wait</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Causes the calling FreeRTOS task to wait. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ms_to_wait</td><td>Milliseconds to wait </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8e58faffa8a7b0934ca76bc1fa5ef6fa_icgraph.svg" width="292" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa3e424512de2e10133b2ffe41f6577ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3e424512de2e10133b2ffe41f6577ea">&sect;&nbsp;</a></span>xtio_extram_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_extram_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize external RAM if available. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aa3e424512de2e10133b2ffe41f6577ea_icgraph.svg" width="287" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a28a34b2db420bacc2f465b1af3f7ca8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28a34b2db420bacc2f465b1af3f7ca8a">&sect;&nbsp;</a></span>xtio_get_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_get_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get level of specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">level</td><td>Input pin level as defined in <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a28a34b2db420bacc2f465b1af3f7ca8a_cgraph.svg" width="311" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a28a34b2db420bacc2f465b1af3f7ca8a_icgraph.svg" width="323" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9e643456f3adfe39a574aa2cc8caa49e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e643456f3adfe39a574aa2cc8caa49e">&sect;&nbsp;</a></span>xtio_host_send()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_host_send </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a data buffer to host through a serial port - USB or UART. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buffer</td><td>Pointer to buffer with data to send </td></tr>
    <tr><td class="paramname">length</td><td>Length of data to send </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a9e643456f3adfe39a574aa2cc8caa49e_icgraph.svg" width="376" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a90b22ca935e03d989e5572a9aa8bf29c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90b22ca935e03d989e5572a9aa8bf29c">&sect;&nbsp;</a></span>xtio_irq_register_callback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_irq_register_callback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(void)&#160;</td>
          <td class="paramname"><em>irq_callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">xtio_interrupt_modes</a>&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Register interrupt callback function. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">irq_callback</td><td>Interrupt callback function </td></tr>
    <tr><td class="paramname">mode</td><td>Tripper mode for IRQ </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a90b22ca935e03d989e5572a9aa8bf29c_cgraph.svg" width="391" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a90b22ca935e03d989e5572a9aa8bf29c_icgraph.svg" width="392" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8f8214e214e26de85a41a1b0af1fc6d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f8214e214e26de85a41a1b0af1fc6d7">&sect;&nbsp;</a></span>xtio_irq_unregister_callback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_irq_unregister_callback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unregister interrupt handler. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8f8214e214e26de85a41a1b0af1fc6d7_cgraph.svg" width="342" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8f8214e214e26de85a41a1b0af1fc6d7_icgraph.svg" width="350" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a02d431b74bbdd1cc5d4ff79903f7ebd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02d431b74bbdd1cc5d4ff79903f7ebd6">&sect;&nbsp;</a></span>xtio_led_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_led_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a>&#160;</td>
          <td class="paramname"><em>led_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>led_state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate LED. </p>
<p>Set MCU pin as output and set initial LED state.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">led_id</td><td>LED ID as defined in <a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> </td></tr>
    <tr><td class="paramname">mode</td><td>LED mode as defined in <a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21">xtio_led_mode_t</a> </td></tr>
    <tr><td class="paramname">led_state</td><td>LED state as defined in <a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">xtio_led_state_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a02d431b74bbdd1cc5d4ff79903f7ebd6_cgraph.svg" width="299" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a02d431b74bbdd1cc5d4ff79903f7ebd6_icgraph.svg" width="260" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aea9d8137a0fddb8ed22f14f318dfec4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea9d8137a0fddb8ed22f14f318dfec4f">&sect;&nbsp;</a></span>xtio_led_set_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_led_set_state </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>led_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>led_state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set LED state. </p>
<p>If LED is set to ON/OFF mode, a value of 0 is OFF and 1 is ON. If PWM mode is implemented, the brightness is controlled by a value between 0.0 and 1.0 - 0.0 is OFF.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">led_id</td><td>LED ID as defined in <a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> </td></tr>
    <tr><td class="paramname">led_state</td><td>LED state as defined in <a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">xtio_led_state_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aea9d8137a0fddb8ed22f14f318dfec4f_cgraph.svg" width="340" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aea9d8137a0fddb8ed22f14f318dfec4f_icgraph.svg" width="376" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae8a7b093baba56abe7b2f64e2221ba40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8a7b093baba56abe7b2f64e2221ba40">&sect;&nbsp;</a></span>xtio_led_toggle_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_led_toggle_state </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>led_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Toggle LED state. </p>
<p>If LED is set to ON/OFF mode, a value of 0 is OFF and 1 is ON. If LED is in PWM mode, this function will set LED state to either ON or OFF depending on current state.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">led_id</td><td>LED ID as defined in <a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ae8a7b093baba56abe7b2f64e2221ba40_cgraph.svg" width="360" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a143e7abdc640864b988cc34a2d53fd81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a143e7abdc640864b988cc34a2d53fd81">&sect;&nbsp;</a></span>xtio_serial_com_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_serial_com_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *&#160;</td>
          <td class="paramname"><em>xt_protocol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate serial communication - USB if available, otherwise UART. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xt_protocol</td><td>Pointer to an xtProtocol object used for parsing communication </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a143e7abdc640864b988cc34a2d53fd81_cgraph.svg" width="344" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a143e7abdc640864b988cc34a2d53fd81_icgraph.svg" width="318" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4f087fae5e8098b3b9c8f9df124b7f4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f087fae5e8098b3b9c8f9df124b7f4e">&sect;&nbsp;</a></span>xtio_set_direction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_set_direction </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>direction</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set direction of specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">direction</td><td>Input or output direction as defined in <a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4">xtio_pin_direction_t</a> </td></tr>
    <tr><td class="paramname">level</td><td>Output pin level as defined in <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a4f087fae5e8098b3b9c8f9df124b7f4e_cgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a4f087fae5e8098b3b9c8f9df124b7f4e_icgraph.svg" width="358" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a387b000f6fb5128449611d9fe0e47369"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a387b000f6fb5128449611d9fe0e47369">&sect;&nbsp;</a></span>xtio_set_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_set_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the level of specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">level</td><td>Output pin level as defined in <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a387b000f6fb5128449611d9fe0e47369_cgraph.svg" width="310" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a387b000f6fb5128449611d9fe0e47369_icgraph.svg" width="362" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9c169f60838175920c2f9ab467d020c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c169f60838175920c2f9ab467d020c1">&sect;&nbsp;</a></span>xtio_set_pin_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_set_pin_mode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set mode for specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">mode</td><td>IO mode as defined by macroes </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a9c169f60838175920c2f9ab467d020c1_cgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a9c169f60838175920c2f9ab467d020c1_icgraph.svg" width="352" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aabfaadd9f4133263d269fda639c42b50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabfaadd9f4133263d269fda639c42b50">&sect;&nbsp;</a></span>xtio_spi_get_instance_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtio_spi_get_instance_size </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate necessary memory for xtio_spi interface. </p>
<p>Return value used to allocate memory before calling <a class="el" href="xtio__spi_8c.xhtml#a018ae31f2548c72ebc1eef81cdcb3cc5">xtio_spi_init</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>Memory size in bytes needed to initialize SPI interface. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aabfaadd9f4133263d269fda639c42b50_icgraph.svg" width="452" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af6d44e13075b75829e0be597a7537a3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6d44e13075b75829e0be597a7537a3c">&sect;&nbsp;</a></span>xtio_spi_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_spi_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structxtio__spi__handle__t.xhtml">xtio_spi_handle_t</a> **&#160;</td>
          <td class="paramname"><em>spi_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>instance_memory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structxtio__spi__callbacks__t.xhtml">xtio_spi_callbacks_t</a> *&#160;</td>
          <td class="paramname"><em>spi_callbacks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_reference</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#ab2897da58f31f3de27446d9f20befe52">xtio_spi_mode_t</a>&#160;</td>
          <td class="paramname"><em>default_spi_mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the SPI system. </p>
<p>If spi_callbacks pointers is NULL when calling this function, default internal functions would be assigned</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_af6d44e13075b75829e0be597a7537a3c_cgraph.svg" width="352" height="560"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_af6d44e13075b75829e0be597a7537a3c_icgraph.svg" width="263" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7245c132bd19ba6ed3ad97529857b614"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7245c132bd19ba6ed3ad97529857b614">&sect;&nbsp;</a></span>xtio_task_uart_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_task_uart_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *&#160;</td>
          <td class="paramname"><em>xt_protocol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate UART and start necessary tasks. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xt_protocol</td><td>Pointer to an xtProtocol object used for parsing communication </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a7245c132bd19ba6ed3ad97529857b614_cgraph.svg" width="306" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a7245c132bd19ba6ed3ad97529857b614_icgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a774bd78f2d1048c26e37640a7e4032d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a774bd78f2d1048c26e37640a7e4032d9">&sect;&nbsp;</a></span>xtio_task_usb_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_task_usb_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *&#160;</td>
          <td class="paramname"><em>xt_protocol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate USB and start necessary tasks. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xt_protocol</td><td>Pointer to an xtProtocol object used for parsing communication </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a774bd78f2d1048c26e37640a7e4032d9_cgraph.svg" width="299" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a774bd78f2d1048c26e37640a7e4032d9_icgraph.svg" width="340" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab37c30dc5bf179f86b20907fb42e1e4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab37c30dc5bf179f86b20907fb42e1e4d">&sect;&nbsp;</a></span>xtio_toggle_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_toggle_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Toggle the level of specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ab37c30dc5bf179f86b20907fb42e1e4d_cgraph.svg" width="330" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a44f44f30e6e6a45ec405e61d9bf66c34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44f44f30e6e6a45ec405e61d9bf66c34">&sect;&nbsp;</a></span>xtio_usb_available()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xtio_usb_available </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if USB is available and connected. </p>
<dl class="section return"><dt>Returns</dt><dd>true if available and connected, otherwise false. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a44f44f30e6e6a45ec405e61d9bf66c34_cgraph.svg" width="307" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a44f44f30e6e6a45ec405e61d9bf66c34_icgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
