/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Thu Apr  6 11:21:56 2017. */

#ifndef PB_NOVELDA_NOVELDA_PB_H_INCLUDED
#define PB_NOVELDA_NOVELDA_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _novelda_RadarFrame {
    bool has_frame_id;
    uint32_t frame_id;
    pb_callback_t range_bins;
    bool has_base_band;
    bool base_band;
/* @@protoc_insertion_point(struct:novelda_RadarFrame) */
} novelda_RadarFrame;

/* Default values for struct fields */

/* Initializer values for message structs */
#define novelda_RadarFrame_init_default          {false, 0, {{NULL}, NULL}, false, 0}
#define novelda_RadarFrame_init_zero             {false, 0, {{NULL}, NULL}, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define novelda_RadarFrame_frame_id_tag          1
#define novelda_RadarFrame_range_bins_tag        2
#define novelda_RadarFrame_base_band_tag         3

/* Struct field encoding specification for nanopb */
extern const pb_field_t novelda_RadarFrame_fields[4];

/* Maximum encoded size of messages (where known) */
/* novelda_RadarFrame_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define NOVELDA_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
